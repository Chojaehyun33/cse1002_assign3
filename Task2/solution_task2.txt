1,2c1,2
< /**
<  * Bouncing Ball with Vectors 
---
> /** 
>  * Two Bouncing Ball with Vectors and Object
4,5c4
<  * Demonstration of using vectors to control motion 
<  * of a body.
---
>  * 2021041776 JaeHyun Cho
7,10c6
<  
< PVector location;  // Location of shape
< PVector velocity;  // Velocity of shape
< PVector gravity;   // Gravity acts at the shape's acceleration
---
> Ball b1, b2;  //define 2 balls
13,17c9,11
<   size(640,360);
<   location = new PVector(100,100);
<   velocity = new PVector(1.5,2.1);
<   gravity = new PVector(0,0.2);
<     
---
>   size(640, 360);
>   b1 = new Ball(100, 100, 1.5, 2.1, 0.2, 48);   //ball1 properties
>   b2 = new Ball(50, 50, 3.0, 4.2, 0.1, 70);     //ball2 properties
22,37c16,33
<   
<   // Add velocity to the location.
<   location.add(velocity);
<   // Add gravity to velocity
<   velocity.add(gravity);
<   
<   // Bounce off edges
<   if ((location.x > width) || (location.x < 0)) {
<     velocity.x = velocity.x * -1;
<   }
<   
<   if (location.y > height) {
<     // We're reducing velocity ever so slightly 
<     // when it hits the bottom of the window
<     velocity.y = velocity.y * -0.95; 
<     location.y = height;
---
>   fill(127);
>   b1.display();
>   fill(150, 200, 0);
>   b2.display(); 
> }
> 
> //Ball Object
> class Ball {
>   int radius;
>   PVector location;
>   PVector velocity;
>   PVector gravity;
> 
>   Ball(int inx, int iny, float flx, float fly, float grv, int inrad) {
>     location = new PVector(inx, iny);
>     velocity = new PVector(flx, fly);
>     gravity = new PVector(0, grv);
>     radius = inrad;
40,44c36,52
<   // Display circle at location vector
<   stroke(255);
<   strokeWeight(2);
<   fill(127);
<   ellipse(location.x,location.y,48,48);
---
>   void display() {
>     location.add(velocity);
>     velocity.add(gravity);
> 
>     if ((location.x > width) || (location.x < 0)) {
>       velocity.x = velocity.x * -1;
>     }
> 
>     if (location.y > height) {
>       velocity.y = velocity.y * -0.95;
>       location.y = height;
>     }
> 
>     stroke(255);
>     strokeWeight(2);
>     ellipse(location.x, location.y, radius, radius);
>   }
